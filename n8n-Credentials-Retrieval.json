{
  "createdAt": "2025-08-21T22:12:11.926Z",
  "updatedAt": "2025-08-22T17:24:15.000Z",
  "id": "IapxKTvsmmecXtkb",
  "name": "n8n-Credentials-Retrieval",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "## Main Workflow\n",
        "height": 548,
        "width": 2792,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2080,
        -1232
      ],
      "typeVersion": 1,
      "id": "5c29bcf0-c776-4786-afe1-64653310c390",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Edit Here!\nUse your\nn8n API\n",
        "height": 100,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -592,
        -1200
      ],
      "typeVersion": 1,
      "id": "b5a47ab0-704d-4444-b868-c13dafa08e67",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Edit Here!\nUse your\nGitHub Account\n",
        "height": 100,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1728,
        -1008
      ],
      "typeVersion": 1,
      "id": "9dd55ad8-7200-4e02-b46a-f470c14232ec",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "MuhammadAbdullah80",
          "mode": "list",
          "cachedResultName": "MuhammadAbdullah80",
          "cachedResultUrl": "https://github.com/MuhammadAbdullah80"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Credentials-Backup",
          "mode": "list",
          "cachedResultName": "n8n-Credentials-Backup",
          "cachedResultUrl": "https://github.com/MuhammadAbdullah80/n8n-Credentials-Backup"
        },
        "filePath": "={{ $json.name }}",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -1216,
        -224
      ],
      "id": "779cb17c-7253-40a4-9162-66bb09449dd2",
      "name": "Get a file",
      "webhookId": "2bfd5629-6f51-4dd2-9eaf-fedf451f17f6",
      "credentials": {
        "githubOAuth2Api": {
          "id": "eXKpJZ0zf7n6h0fl",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "MuhammadAbdullah80",
          "mode": "list",
          "cachedResultName": "MuhammadAbdullah80",
          "cachedResultUrl": "https://github.com/MuhammadAbdullah80"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Credentials-Backup",
          "mode": "list",
          "cachedResultName": "n8n-Credentials-Backup",
          "cachedResultUrl": "https://github.com/MuhammadAbdullah80/n8n-Credentials-Backup"
        },
        "filePath": "/"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -1648,
        -240
      ],
      "id": "9d93b5cc-bf8e-496a-af9f-b7731a1f4820",
      "name": "List files",
      "webhookId": "4fbf6290-4079-42bb-a243-b7929617b1fc",
      "credentials": {
        "githubOAuth2Api": {
          "id": "eXKpJZ0zf7n6h0fl",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3e17041c-6273-4f10-a1ab-00df174d04a4",
              "leftValue": "={{ $json.path }}",
              "rightValue": ".json",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1424,
        -240
      ],
      "id": "2776f368-3aa2-4e0b-99cb-e771ca7fab2c",
      "name": "Filter1"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -976,
        -240
      ],
      "id": "e86a49c8-6815-4cc6-b202-4f257cce1bfb",
      "name": "Extract from File"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1872,
        -240
      ],
      "id": "eaad27af-77c0-4bb9-bf66-133a46e54e1f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "create",
        "workflowObject": "={{ JSON.stringify($('Loop Over Items1').item.json.data) }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        560,
        -368
      ],
      "id": "67dd33fc-56cf-4615-bcdb-adcc3fb7d02b",
      "name": "Create a workflow",
      "credentials": {
        "n8nApi": {
          "id": "rmz66QB1F2DsQvEu",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ff474ca8-c2d2-4bb1-a5aa-2a2716d321fd",
              "leftValue": "={{ $json.name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        336,
        -432
      ],
      "id": "65609e21-2161-4b01-8f23-665c8bbed71c",
      "name": "If1"
    },
    {
      "parameters": {
        "content": "## Edit Here!\nUse your\nGitHub Account\n",
        "height": 100,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1280,
        -1008
      ],
      "typeVersion": 1,
      "id": "89b0a523-4728-4a30-ae27-2f5046bd461f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Edit Here!\nUse your\nn8n API\n",
        "height": 100,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -384,
        -1200
      ],
      "typeVersion": 1,
      "id": "15ac86dc-3780-42a1-bbe5-0b3e38948d0c",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Edit Here!\nUse your\nn8n API\n",
        "height": 100,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        64,
        -1120
      ],
      "typeVersion": 1,
      "id": "e7d9761a-ccfe-4c73-94c0-e81215d88158",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "resource": "credential",
        "name": "={{ $json.data.name }}",
        "credentialTypeName": "={{ $json.data.type }}",
        "data": "={{ JSON.stringify($json.data.data) }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -64,
        -224
      ],
      "id": "e0d28f92-b84a-4946-8add-c3b5d61121a4",
      "name": "Create a credential",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "n8nApi": {
          "id": "rmz66QB1F2DsQvEu",
          "name": "n8n account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "command": "npx n8n export:credentials --all --decrypted"
      },
      "id": "5b794e62-5237-462d-9747-8d67647152fe",
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        -1136,
        -624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"
      },
      "id": "d0f704bf-c82f-4f47-a52f-6d1de2fe7804",
      "name": "JSON formatting",
      "type": "n8n-nodes-base.code",
      "position": [
        -912,
        -624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "id"
            },
            {
              "fieldToAggregate": "name"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -704,
        -624
      ],
      "id": "f4ab7424-abb5-4bb1-8a5b-2bba0e9d3ab7",
      "name": "Aggregate"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -192,
        -432
      ],
      "id": "99fe8b6f-3297-4f3c-9749-0d7cf7e2e162",
      "name": "Merge"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.id"
            },
            {
              "fieldToAggregate": "data.name"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -720,
        -288
      ],
      "id": "dec86247-eb97-4b4d-82d6-6f5b8484fc86",
      "name": "Aggregate1"
    }
  ],
  "connections": {
    "Get a file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List files": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "List files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a workflow": {
      "main": [
        []
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Create a workflow",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Create a credential": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "JSON formatting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON formatting": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "64cef2af-6c53-4b39-af4a-f4b294e0d35c",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-21T22:12:11.934Z",
      "updatedAt": "2025-08-21T22:12:11.934Z",
      "role": "workflow:owner",
      "workflowId": "IapxKTvsmmecXtkb",
      "projectId": "CtFhfI3VvFsmPKJX"
    }
  ],
  "tags": []
}